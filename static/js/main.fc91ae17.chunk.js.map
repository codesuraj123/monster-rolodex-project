{"version":3,"sources":["_helpers/index.jsx","components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Home.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["setUrlParams","Searchs","urlParams","URLSearchParams","window","location","hash","Object","entries","forEach","key","value","set","console","log","toString","Card","props","history","useHistory","Grid","container","className","alt","src","monster","id","name","Button","variant","color","onClick","push","monsterid","CardList","monsterData","map","Searchbox","handleChange","TextField","label","type","onChange","Home","useState","setMonsterData","searchField","setSearchField","useEffect","fetch","then","response","json","monsters","filteredData","filter","toLowerCase","includes","Paper","e","target","Details","details","setdetails","ScreenId","searchParams","search","Number","get","getUrlParams","username","phone","email","website","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc91ae17.chunk.js","sourcesContent":["import URLSearchParams from \"url-search-params\"\r\n\r\nconst setUrlParams = (Searchs) => {\r\n    const urlParams = new URLSearchParams(window.location.hash)\r\n    Object.entries(Searchs).forEach(([key, value]) => urlParams.set(key, value))\r\n    console.log(urlParams.toString());\r\n    return urlParams.toString()\r\n}\r\n\r\nexport default setUrlParams;","import React from 'react'\r\nimport \"./style.css\"\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport setUrlParams from \"../_helpers/index\"\r\n\r\nconst Card = (props) => {\r\n    let history = useHistory()\r\n    const details = \"/details\"\r\n    return (\r\n        <Grid container className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h3>{props.monster.name}</h3>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(`${details}?${setUrlParams({ monsterid: props.monster.id })}`)}>Details</Button>\r\n        </Grid>\r\n\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport './style.css'\r\n\r\nconst CardList = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsterData.map(monster => <Card key={monster.id} monster={monster} />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n","import { TextField } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst Searchbox = ({ handleChange }) => {\r\n    return (\r\n        <div>\r\n            <TextField\r\n                id=\"monster-id\"\r\n                label=\"Search Monster\"\r\n                type=\"search\"\r\n                variant=\"outlined\"\r\n                onChange={handleChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Searchbox\r\n","import { Paper } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport CardList from './Cardlist'\r\nimport Searchbox from './Searchbox';\r\nimport './style.css'\r\n\r\nconst Home = () => {\r\n    const [monsterData, setMonsterData] = useState([]);\r\n    const [searchField, setSearchField] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/users`)\r\n            .then(response => response.json())\r\n            .then(monsters => setMonsterData(monsters))\r\n    }, [])\r\n    const filteredData = monsterData.filter((monster) => monster.name.toLowerCase().includes(searchField.toLowerCase()))\r\n    const handleChange = (e) => {\r\n        return setSearchField(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Paper className=\"search\">\r\n                <h1>The Monster Rolodex Project</h1>\r\n                <Searchbox handleChange={handleChange} />\r\n            </Paper>\r\n            <CardList monsterData={filteredData} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { Button } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport URLSearchParams from \"url-search-params\";\r\nimport './style.css'\r\n\r\nconst Details = () => {\r\n    let history = useHistory()\r\n    const [details, setdetails] = useState([])\r\n    const getUrlParams = (location) => {\r\n        const searchParams = new URLSearchParams(location.search)\r\n        const ScreenId = Number(searchParams.get(\"monsterid\"))\r\n        console.log(ScreenId)\r\n        return { ScreenId }\r\n    }\r\n\r\n    const { ScreenId } = getUrlParams(window.location)\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${ScreenId}`)\r\n            .then(response => response.json())\r\n            .then(details => setdetails(details))\r\n    }, [ScreenId])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <h2>Hi, {details.name}</h2>            <img alt=\"monster\" src={`https://robohash.org/${details.id}?set=set2&size=180x180`} />\r\n            <h3>UserName : {details.username}</h3>\r\n            <h3>Contact Details - </h3>\r\n            <h4>Phone: {details.phone}</h4>\r\n            <h4>Email: {details.email}</h4>\r\n            <h4>Website: {details.website}</h4>\r\n            <Button color=\"primary\" variant=\"outlined\" onClick={() => history.push(\"/\")}> Back To Main Screen </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport Home from \"./components/Home\";\nimport Details from \"./components/Details\"\n\nconst App = () => {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/details\" component={Details} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}